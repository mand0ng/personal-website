version: "3.8"

services: 
  client: 
    build:
      context: ./client
      dockerfile: Dockerfile.client
    ports:
      - "3000:3000"
    networks:
      - main
    volumes:
      - ./client:/app
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SOCKET_URL=${SOCKET_URL:?ERROR_NEXT_PUBLIC_SOCKET_URL}
      - NEXT_PUBLIC_API_URL=${API_URL:?ERROR_NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_CLIENT_URL=${CLIENT_URL:?ERROR_NEXT_PUBLIC_CLIENT_URL}
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.api
    ports: 
      - "5000:5000"
    volumes:
      - ./api:/app
    networks:
      - main
    environment:
      - API_URL=${API_URL:?ERROR_API_URL}

  socket_server:
    build:
      context: ./socket-server
      dockerfile: Dockerfile.socket
    ports:
      - "3001:3001"
    volumes:
      - ./socket-server:/app
    networks:
      - main
    environment:
      - CLIENT_URL=${CLIENT_URL:?ERROR_CLIENT_URL}

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?ERROR_POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?ERROR_POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:?ERROR_POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - main
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

networks:
  main:
  

